ghdl --std=08                                                                 \
  --work=fpga_cores third_party/fpga_cores/src/common_pkg.vhd                 \
                    third_party/fpga_cores/src/synchronizer.vhd               \
                    third_party/fpga_cores/src/axi_pkg.vhd                    \
                    third_party/fpga_cores/src/sr_delay.vhd                   \
                    third_party/fpga_cores/src/skidbuffer.vhd                 \
                    third_party/fpga_cores/src/ram_inference_dport.vhd        \
                    third_party/fpga_cores/src/ram_inference.vhd              \
                    third_party/fpga_cores/src/rom_inference.vhd              \
                    third_party/fpga_cores/src/pipeline_context_ram.vhd       \
                    third_party/fpga_cores/src/edge_detector.vhd              \
                    third_party/fpga_cores/src/pulse_sync.vhd                 \
                    third_party/fpga_cores/src/axi_stream_delay.vhd           \
                    third_party/fpga_cores/src/sync_fifo.vhd                  \
                    third_party/fpga_cores/src/axi_stream_master_adapter.vhd  \
                    third_party/fpga_cores/src/axi_stream_duplicate.vhd       \
                    third_party/fpga_cores/src/axi_stream_fifo.vhd            \
                    third_party/fpga_cores/src/async_fifo.vhd                 \
                    third_party/fpga_cores/src/axi_stream_width_converter.vhd \
  --work=work       rtl/axi_baseband_scrambler.vhd                            \
                    rtl/axi_bit_interleaver.vhd                               \
                    rtl/dvb_utils_pkg.vhd                                     \
                    rtl/bch_encoder_mux.vhd                                   \
                    rtl/axi_ldpc_table.vhd                                    \
                    rtl/axi_ldpc_encoder_core.vhd                             \
                    rtl/axi_ldpc_encoder.vhd                                  \
                    rtl/axi_plframe_header.vhd                                \
                    rtl/plframe_header_pkg.vhd                                \
                    rtl/ldpc/ldpc_pkg.vhd                                     \
                    rtl/ldpc/ldpc_tables_pkg.vhd                              \
                    rtl/dvbs2_tx.vhd                                          \
                    rtl/bch_generated/bch_128x64.vhd                          \
                    rtl/bch_generated/bch_192x64.vhd                          \
                    rtl/bch_generated/bch_128x32.vhd                          \
                    rtl/bch_generated/bch_160x16.vhd                          \
                    rtl/bch_generated/bch_128x16.vhd                          \
                    rtl/bch_generated/bch_168x8.vhd                           \
                    rtl/bch_generated/bch_192x32.vhd                          \
                    rtl/bch_generated/bch_192x8.vhd                           \
                    rtl/bch_generated/bch_128x8.vhd                           \
                    rtl/bch_generated/bch_160x32.vhd                          \
                    rtl/bch_generated/bch_160x64.vhd                          \
                    rtl/bch_generated/bch_192x16.vhd                          \
                    rtl/bch_generated/bch_160x8.vhd                           \
                    rtl/axi_bch_encoder.vhd                                   \
                    rtl/config_fifo.vhd                                       \
  -e dvbs2_tx

# read design
hierarchy -top dvbs2_tx

# # the high-level stuff
# proc; fsm; opt; memory; opt

# # mapping to internal cell library
# techmap; opt

# # mapping flip-flops to mycells.lib
# dfflibmap -liberty mycells.lib

# # mapping logic to mycells.lib
# abc -liberty mycells.lib

synth_xilinx -flatten -edif dvbs2_tx.edif  -blif dvbs2_tx.blif

# cleanup
clean
